@property --angle {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --scale {
    syntax: "<number>";
    inherits: false;
    initial-value: 1.0;
}

@property --shift {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 0;
}

.game-board {
    --angle: 0deg;
    --scale: 1.0;
    opacity: 1;
    transform: scale(var(--scale)) rotate(var(--angle));
    transition: opacity 1.5s ease-in, --angle 1.5s ease-in-out, --scale 1.5s ease-in-out;

    border-collapse: collapse;
}
.mul-game.transition-out .game-board {
    --angle: 90deg;
    --scale: 0.0;
    opacity: 0;
}
.game-board td {
    margin: 0;
    width: 10%;
    height: 10%;
    border: 4px solid #ccc;
    color: #666;
    font-family: 'Arial', sans-serif;
    font-weight: bold;
    position: relative;
}
.game-board tr:first-child td {
    border-top: none;
}
.game-board tr:last-child td {
    border-bottom: none;
}
.game-board td:first-child {
    border-left: none;
}
.game-board td:last-child {
    border-right: none;
}

.riddle-controls input[type="radio"] {
    display: none;
}

.riddle-controls label {
    background-color: #ddd;
    color: #c60;
    cursor: pointer;
    display: flex;
    width: 100%;
    height: 100%;
    text-align: center;
    align-items: center;
    justify-content: center;
    z-index: 200;
    position: absolute;
    left: 0;
    top: 0;
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
}
.riddle-controls.with-guess label {
    color: #00d;
}

.riddle-controls:has(input[type="radio"]:checked) label {
    outline: 6px solid #000;
    border-radius: 6px;
    border: none;
    background-color: #aaa;
}

.riddle-controls input[type="button"] {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0;
    z-index: 90;
    transition: all 0.3s ease-out;
    opacity: 0;
    appearance: none;
    --webkit-appearance: none;
    border: 0;
    border-radius: 16px;
    box-shadow: inset 4px 4px 8px #fff, inset -4px -4px 8px #000;
    background: linear-gradient(145deg, #222 0%, #ddd 100%);
    color: #c60;
    font-size: 1.5em;
    font-weight: bold;
    cursor: pointer;
    color: #000;

    --index: 0;
    --initial-angle: calc(var(--index) * 90deg);
    --angle: var(--initial-angle);
    --scale: 1.0;
    --shift: 0%;
    transform: scale(var(--scale)) rotate(var(--angle)) translate(var(--shift), 0) rotate(calc(var(--angle) * -1));
}

.riddle-controls:has(input[type="radio"]:checked) input[type="button"] {
    /*width: 130%;
    height: 130%;*/
    --angle: calc(var(--initial-angle) + 135deg);
    --scale: 1.2;
    --shift: 140%;
    opacity: 0.85;
    transition: all 0.3s ease-out;
}
.riddle-controls:has(input[type="radio"]:checked) input[type="button"]:hover {
    transition: all 0.2s ease-in;
    opacity: 1;
    /*background: linear-gradient(145deg, #444 0%, #fff 100%);*/
    filter: brightness(1.3);
}

.board-nav button {
    width: 6.5vh;
    height: 6.5vh;
}

.nav-button {
    cursor: pointer;
    appearance: none;
    border-radius: 20%;
    border: 6px solid black;
    background-color: #ddf;
    font-size: 1.2em;
    font-weight: bold;
    cursor: pointer;
    color: #000;
    transition: all 0.1s ease-in;
}
.nav-button:hover {
    transform: scale(1.1);
    background-color: #eef;
}
.nav-button:active {
    transform: scale(0.9);
    background-color: #aaf;
}
.nav-button.correct {
    background-color: #dfd;
}
.nav-button.incorrect {
    background-color: #fdd;
}
.nav-button.partial {
    background-color: #ffd;
}

.next-prev-button {
    width: 13vh;
    height: 10vh;
}
